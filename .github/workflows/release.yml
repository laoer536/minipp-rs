name: Release minipp

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Package (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: minipp-linux-x86_64.tar.gz
          # Linux aarch64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: minipp-linux-arm64.tar.gz
          # macOS x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: minipp-macos-x86_64.tar.gz
          # macOS aarch64 (Apple Silicon M1/M2)
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: minipp-macos-arm64.tar.gz
          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: minipp-windows-x86_64.zip

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.87.0
          override: true
          target: ${{ matrix.target }}

      - name: Install cross (for cross-compiling)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: cargo install cross

      - name: Build (native/cross)
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
        shell: bash

      - name: Prepare artifact
        run: |
          mkdir dist
          BIN_NAME=minipp
          TARGET_DIR=target/${{ matrix.target }}/release
          # Windows需加.exe
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp $TARGET_DIR/$BIN_NAME.exe dist/
            7z a ../${{ matrix.artifact }} dist/$BIN_NAME.exe
          else
            cp $TARGET_DIR/$BIN_NAME dist/
            tar -czvf ../${{ matrix.artifact }} -C dist $BIN_NAME
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ../${{ matrix.artifact }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*.tar.gz,./artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}